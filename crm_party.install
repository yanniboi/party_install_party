<?php

/**
 * @file
 * Contains install hooks for the CRM party module.
 */
 
/**
 * Implements hook_party_data_set_schema().
 *
 * @todo Make this a hook.
 */
function crm_party_party_data_set_schema() {
  return array(
    'description' => 'This links parties to data sets of type '.$set_type,
    'fields' => array(
      'psid' => array(
        'description' => 'The unique ID for this relationship.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pid' => array(
        'description' => 'The id of the party',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'sid' => array(
        'description' => 'The id of the set',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'main' => array(
        'description' => 'Is this the main set',
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'hat_main' => array(
        'description' => 'Is this the main set for this hat',
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'hat' => array(
        'description' => 'What hat is this associated with',
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => 'all',
      ),
    ),
    'indexes' => array(
      'party' => array('pid'),
      'set_id' => array('sid'),
    ),
    'primary key' => array('psid'),
  );
} 

/**
 * Implements hook_schema().
 */
function crm_party_schema() {
  $schema['crm_party'] = array(
    'description' => 'Stores Id, name and email for party contacts',
    'fields' => array(
      'pid' => array(
        'description' => 'Primary key for the party.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The party type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'Full name of the contact.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ) + entity_exportable_schema_fields(),
    ),
    'primary key' => array('pid'),
  );
  
  $schema['crm_party_party_pieces'] = array(
    'description' => 'Stores relationships between party (types) and party pieces',
    'fields' => array(
      'instance_id' => array(
        'description' => 'Primary key for the party piece instance.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'parent_id' => array(
        'description' => 'The id of the parent party piece instance.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'The title of this party piece',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),
      'party_type' => array(
        'description' => 'The party type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'party_piece' => array(
        'description' => 'The party piece type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'arguments' => array(
        'description' => 'Any extra filters or arguments the party piece should apply. In json format.',
        'type' => 'text',
        'not null' => true,
      ),
      'weight' => array(
        'description' => 'The ordering number of the party piece',
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      );
    ),
    'primary key' => array('instance_id'),
  );
  
  //This table is how we link party pieces to party types and weight them etc

  /*$schema['crm_party_type'] = array(
    'description' => 'Stores information about defined party types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique model type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this crm party type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this crm party type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this model type in relation to others.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this model type.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );*/
  return $schema;
}
