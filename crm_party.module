<?phpinclude_once("includes/contact.entity.inc");function crm_party_entity_info(){  $party_info['crm_party'] = array(    'label' => t('Contact'),    'entity class' => 'CRMParty',    'controller class' => 'CRMPartyController',    'base table' => 'crm_party',    'uri callback' => 'crm_party_uri',    'fieldable' => TRUE,    'entity keys' => array(      'id' => 'pid',      'name' => 'name',    ),    'static cache' => TRUE,    'bundles' => array(      'crm_party'=> array(        'label' => 'Contact',        'admin' => array(          'path' => 'admin/community/contact/manage',          'access arguments' => array('administer contacts'),        ),      ),    ),    'view modes' => array(      'full' => array(        'label' => t('Full Contact'),        'custom settings' =>  FALSE,      ),    )  );    return $party_info;}/** * Define some pages */function crm_party_menu() {  $items['admin/community/party/manage'] = array(    'title' => 'Contact Admin',    'description' => 'Manage Contact Information',    'page callback' => 'crm_party_info',    'access arguments' => array('administer contacts'),  );  $items['party/%crm_party'] = array(    'title callback' => 'crm_party_page_title',    'title arguments' => array(1),    'page callback' => 'crm_party_page_view',    'page arguments' => array(1),    'access arguments' => array('view contacts'),    'type' => MENU_CALLBACK,  );  $items['party/%crm_party/edit'] = array(    'title callback' => 'crm_party_edit_page_title',    'title arguments' => array(1),    'page callback' => 'drupal_get_form',    'page arguments' => array('crm_party_edit_form', 1),    'access arguments' => array('edit contacts'),    'type' => MENU_CALLBACK,  );  $items['party/add'] = array(    'title' => 'Add Contact',    'page callback' => 'crm_party_add',    'access arguments' => array('create contacts'),  );  return $items;}/** * Access callback */function crm_party_permission(){    return array(    'administer parties' =>  array(      'title' => t('Administer Parties'),      'restrict access' => TRUE,    ),    'create parties' => array(      'title' => t('Create Parties'),    ),    'view parties' => array(      'title' => t('View Parties'),    ),    'edit parties' => array(      'title' => t('Edit Parties'),    )  );}/** * URI callback for contacts */function crm_party_uri($party) {  return array('path' => 'contact/'.$party->pid , );}/** * */function crm_party_theme() {  return array(    'crm_party_email' => array(      'variables' => array('crm_party_email', 'crm_party' => Null),      'template' => 'crm_party_email',    ),  );}/** * Load a single contact */function crm_party_load($pid = NULL, $reset = FALSE){  $pids = (isset ($pid) ? array($pid) : array());  $party = crm_party_load_multiple($pids, $reset);  return $party ? reset ($party) : FALSE;}/** * Load many contacts */ function crm_party_load_multiple($pids = array(), $conditions = array(), $reset = FALSE){  return entity_load('crm_party', $pids, $conditions, $reset);}/** * pages - to be moved to a different file */function crm_party_info() {  return "Welcome to the contact info administration page";}function crm_party_page_title($party) {  return $party->name;}function crm_party_page_view($party, $view_mode = 'full') {  $party->content = array();    $controller = entity_get_controller('crm_party');    $content = $controller->view(array($party->pid => $party));  drupal_set_title($party->name);  return $content;    }/*function crm_party_field_extra_fields() {  $return = array();  $return['crm_party']['crm_party'] = array(    'display' => array(      'email' => array(        'label' => t('Email'),        'description' => t('Contacts Email'),        'weight' => 1,      ),    ),  );  return $return;}*/function crm_party_edit_page_title($party) {  return "Edit " . $party->name;} /** * Add Contact Page */function crm_party_add() {  $party = (object) array(    'type' => 'crm_party',    'name' => '',    'email' => '', );      return drupal_get_form('crm_party_edit_form', $party);}function crm_party_edit_form($form, &$form_state, $party) {  if(isset($party->pid)) {    $form['pid'] = array(      '#type' => 'value',      '#value' => $party->pid,    );  }    $form['name'] = array(    '#type' => 'textfield',    '#title' => t('Full Name'),    '#required' => TRUE,    '#default_value' => $party->name,  );    $form['email'] = array(    '#type' => 'textfield',    '#title' => t('Email Address'),    '#required' => FALSE,    '#default_value' => $party->email,  );      field_attach_form('crm_party', $party, $form, $form_state);    $form['submit'] = array(    '#type' => 'submit',    '#value' => t('Save'),    '#weight' => 99,  );  return $form;}function crm_party_edit_form_validate($form, &$form_state) {  $submission = (object) $form_state['values'];  field_attach_form_validate('crm_party', $submission, $form, $form_state);  }function crm_party_edit_form_submit($form, &$form_state) {  $party = (object) $form_state['values'];  field_attach_submit('crm_party', $party, $form, $form_state);  $party = crm_party_save($party);  $form_state['redirect'] = 'contact/' . $party->pid;}/** * Delete a contact */function crm_party_delete(CRMParty $party) {  $party->delete();}/** * Save a contact */function crm_party_save(&$party) {  return entity_get_controller('crm_party')->save($party);}function crm_party_field_extra_fields() {  $return = array();  $return['crm_party']['crm_party'] = array(    'form' => array(      'email' => array(        'label' => t('Email'),        'description' => t('Tribes Contact Email'),      ),    ),    'display' => array(      'email' => array(        'label' => t('Email'),        'description' => t('Tribes Contact Email'),      ),    ),  );  return $return;}