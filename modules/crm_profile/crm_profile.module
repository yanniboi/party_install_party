<?php

/**
 * @file
 * Support for configurable user profiles which are not attached to users.
 */


/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Alter Party forms to do things
 */
function crm_profile_form_crm_party_edit_form_alter(&$form, &$form_state, $form_id) {
  // Make sure the uid is null. 
  $form['uid'] = array(
    '#type' => 'hidden',
    '#value' => null,
  );
  
  dsm($form_state);
  dsm($form);
  
  $profiles = array();
  if (isset($form['pid'])) {
    $profiles = _crm_profile_load_by_party($form['pid']['#value']);
  }  
  
  // Load appropriate profile2s and attach them to the party form
  foreach (profile2_get_types() as $type_name => $profile_type) {
    if (isset($profiles[$type_name])) {
      $form_state['profiles'][$type_name] = $profiles[$type_name];
    }
    
    if (empty($form_state['profiles'][$type_name])) {
      $form_state['profiles'][$type_name] = profile_create(array('type' => $type_name));
    }
    profile2_attach_form($form, $form_state);
    // Wrap each profile form in a fieldset.
    $form['profile_' . $type_name] += array(
      '#type' => 'fieldset',
      '#title' => check_plain($profile_type->label),
    );
  }
  
  $form['#submit'][] = 'crm_profile_post_form_submit_relate';
}

/**
 * Relate the profile2 entities to the crm_party in form_state
 */
function crm_profile_post_form_submit_relate($form, &$form_state) {
  $party = $form_state['crm_party'];
  $profiles = array();
  
  foreach (profile2_get_types() as $type_name => $profile_type) {
    if(isset($form_state['profiles'][$type_name])) {
      $profiles[] = $form_state['profiles'][$type_name];
    } 
    else {
      $thisProfile = profile_create(array('type' => $type_name, 'uid' => null));
      profile2_save($thisProfile);
      $profiles[] =  $thisProfile;
    } 
  }
  
  // Foreach profile2 in the form state add a binary relation linking it
  // to the party
  foreach($profiles as $profile) {
    _crm_party_profile_relate($party, $profile);
  }
}

/**
 * Relate a party entity to a profile2 entity
 *
 * @param $party
 *   A fully loaded party object, from crm_party_load(). Whats important is that the pid is correct.
 * @param $profile
 *   A profile2 object
 */
function _crm_party_profile_relate($party, $profile) {
  $endpoints = array();
  $endpoints[] = array(
    'entity_type' => 'crm_party',
    'entity_id' => $party->pid,
  );
  $endpoints[] = array(
    'entity_type' => 'profile2',
    'entity_id' => $profile->pid,
  );
  
  //create a relation for each party profile2 which is created.
  $relation = relation_create('party_to_profile2_'.$profile->type, $endpoints);
  $rid = relation_save($relation);

  //set some nice messages - change
  drupal_set_message('Party: ' . $party->label . ' has been related to Profile: ' . $profile->pid);
}

/**
 * Change the Party Details Page
 *
 * @param $party
 *   A party object.
 *
 * @return 
 *   An array
 */
function crm_profile_crm_party_page_view_alter($party) {
  $build = array();
  $allProfiles = _crm_profile_load_by_party($party);
  foreach($allProfiles as $type => $profiles) {
    //as $profiles could be a list of profiles we need to standardise what we're dealing with.
    if (is_object($profiles)) {
      $temp = $profiles;
      $profiles = array();
      $profiles[] = $temp;
    }
    foreach($profiles as $profile) {
      if (profile2_access('view', $profile)) {
        $build['profile_' . $profile->pid] = array(
          '#type' => 'user_profile_category',
          '#title' => $profile->label,
        );
        $build['profile_' . $profile->pid]['view'] = $profile->view('account');
      }
    }
  }
  
  return $build;
}

/**
 * Load all the profiles 
 *
 * @param $party
 *   The Id of the party
 *
 * @return An array of profiles attached to this party of the for ['type'][] = $profile;
 */
function _crm_profile_load_by_party($party) {
  //Get the pid from whatever is passed.
  $pid = is_object($party) ? $party->pid : $party;
  $profiles = array();
  
  foreach (profile2_get_types() as $type_name => $profile_type) {
    $raw = relation_get_related_entities('crm_party', $pid, 'party_to_profile2_'.$type_name);
    foreach($raw as $relation) {
      foreach($relation as $profile) {
        if(count($relation) == 1)
          $profiles[$type_name] = $profile;
        else
          $profiles[$type_name][] = $profile;
      }
    }   
  } 
  return $profiles;
}
