<?php

/**
 * Implementation of hook_menu().
 */
function party_devel_menu() {
  $items = array();

  $items['admin/config/development/generate/party'] = array(
    'title' => 'Generate parties',
    'description' => 'Generate a given number of parties. Optionally delete current parties.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('party_devel_generate_parties_form'),
    'access arguments' => array('administer parties'),
  );

  return $items;
}

function party_devel_generate_parties_form() {
  $options = array();

  $types = party_get_party_types();
  $suffix = '';
  foreach ($types as $type => $type_array) {
    $options[$type] = $type_array['label'];
  }

  if (empty($options)) {
    drupal_set_message(t('You do not have any Party types that can be generated.'), 'error', FALSE);
    return;
  }

  $form['party_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Party types'),
    '#options' => $options,
    '#default_value' => array_keys($options),
  );
  $form['kill_parties'] = array(
    '#type' => 'checkbox',
    '#title' => t('<strong>Delete all parties</strong> of these types before generating new parties.'),
    '#default_value' => FALSE,
  );
  $form['num_parties'] = array(
    '#type' => 'textfield',
    '#title' => t('How many parties would you like to generate?'),
    '#default_value' => 50,
    '#size' => 10,
  );

  $form['label_length'] = array(
    '#type' => 'textfield',
    '#title' => t('Max word length of party labels'),
    '#default_value' => 2,
    '#size' => 10,
  );

  /* unset($options);
  $options[LANGUAGE_NONE] = t('Language neutral');
  if (module_exists('locale')) {
    $options += locale_language_list();
  }
  $form['add_language'] = array(
    '#type' => 'select',
    '#title' => t('Set language on products'),
    '#multiple' => TRUE,
    '#disabled' => !module_exists('locale'),
    '#description' => t('Requires locale.module'),
    '#options' => $options,
    '#default_value' => array(LANGUAGE_NONE => LANGUAGE_NONE),
  );*/

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generate'),
  );
  $form['#redirect'] = FALSE;

  return $form;
}

function party_devel_generate_parties_form_submit($form_id, &$form_state) {
  module_load_include('inc', 'party_devel', 'devel_generate');
  $form_state['values']['party_types'] = array_filter($form_state['values']['party_types']);
  if ($form_state['values']['num_parties'] <= 50) {
    party_devel_generate_parties($form_state);
  }
  else {
    module_load_include('inc', 'party_devel', 'devel_generate_batch');
    party_devel_generate_batch_parties($form_state);
  }
}


/**
 * Pre-process the devel_generate_content_form request.  This is needed so
 * batch api can get the list of users once.
 *
 * @param $num
 *   array of options obtained from devel_generate_parties_form.
 */
function party_devel_generate_parties_pre_party(&$results) {
  module_load_include('inc', 'devel_generate');
  // Get user id.
  $users = devel_get_users();
  $users = array_merge($users, array('0'));
  $results['users'] = $users;
}
